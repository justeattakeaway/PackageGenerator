{% macro addProduct product %}        
        .{{ product.productType }}(
            name: "{{ product.name }}",
            targets: {{ product.targets }}
        ),
{% endmacro %}
{% macro addTarget target %}
        .{{ target.targetType }}(
            name: "{{ target.name }}",
            dependencies: [
            {% for dependency in target.dependencies %}
                {% if dependency.isTarget %}
                .byName(name: "{{ dependency.name }}"),
                {% else %}
                .product(name: "{{ dependency.name }}", package: "{% if dependency.package %}{{ dependency.package }}{% else %}{{ dependency.name }}{% endif %}"),
                {% endif %}
            {% endfor %}
            {% for target in local_binary_targets %}
                .target(name: "{{ target.name }}"),
            {% endfor %}
            {% for target in remote_binary_targets %}
                .target(name: "{{ target.name }}"),
            {% endfor %}
            ],
            path: "{{ target.sourcesPath }}",
            {% if target.exclude %}
            exclude: [
            {% for excluded in target.exclude %}
                "{{ excluded }}",
            {% endfor %}
            ],
            {% endif %}
            {% if target.resourcesPath %}
            resources: [
                .process("{{ target.resourcesPath }}")
            ],
            {% endif %}
            {% if target.swiftSettings %}
            swiftSettings: [
            {% for setting in target.swiftSettings %}
                {{ setting }},
            {% endfor %}
            ],
            {% endif %}
            plugins: [
                {% for plugin in target.plugins %}
                .plugin(name: "{{ plugin.name }}", package: "{% if plugin.package %}{{ plugin.package }}{% else %}{{ plugin.name }}{% endif %}"),
                {% endfor %}
            ]
        ),
{% endmacro %}
{% macro addLocalBinaryTarget target %}
        .binaryTarget(
            name: "{{ target.name }}",
            path: "{{ target.path }}"
        ),
{% endmacro %}
{% macro addRemoteBinaryTarget target %}
        .binaryTarget(
            name: "{{ target.name }}",
            url: "{{ target.url }}",
            checksum: "{{ target.checksum }}"
        ),
{% endmacro %}
// swift-tools-version: 5.7

// This file was automatically generated by PackageGenerator and untracked
// PLEASE DO NOT EDIT MANUALLY

import PackageDescription

let package = Package(
    name: "{{ package_name }}",
    defaultLocalization: "en",
{% if platforms %}
    platforms: [
    {% for platform in platforms %}
        {{ platform }},
    {% endfor %}
    ],
{% else %}
    platforms: [.iOS(.v15)],
{% endif %}
    products: [
{% for product in products %}
    {% call addProduct product %}
{% endfor %}
    ],
    dependencies: [
{% for local_dependency in local_dependencies %}
        .package(
            path: "{{ local_dependency.path }}"
        ),
{% endfor %}
{% for remote_dependency in remote_dependencies %}
        .package(
            url: "{{ remote_dependency.url }}",
            {% if remote_dependency.version %}
            exact: "{{ remote_dependency.version }}"
            {% elif remote_dependency.revision %}
            revision: "{{ remote_dependency.revision }}"
            {% elif remote_dependency.branch %}
            branch: "{{ remote_dependency.branch }}"
            {% endif %}
        ),
{% endfor %}
    ],
    targets: [
{% for target in targets %}
    {% call addTarget target %}
{% endfor %}
{% for target in local_binary_targets %}
    {% call addLocalBinaryTarget target %}
{% endfor %}
{% for target in remote_binary_targets %}
    {% call addRemoteBinaryTarget target %}
{% endfor %}
    ]
)